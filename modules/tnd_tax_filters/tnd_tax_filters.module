<?php

/*
 * implements hook_block_info()
 */
function tnd_tax_filters_block_info() {
	$blocks['portfolio-filters'] = array(
		'info'        => t('Block with filters for portfolio'),
		);
	return $blocks;
}

/*
 * implements hook_block_view()
 */
function tnd_tax_filters_block_view($delta = '') {
	$block = array();
	if ($delta == 'portfolio-filters') {
		$block['subject'] = t('Block with filters for portfolio');
		$block['content'] = drupal_get_form('tnd_tax_filters_filters_form');
	}

	return $block;
}

/*
 * implements hook_form()
 */
function tnd_tax_filters_filters_form($form, $form_state) {
	// get all terms from categories vocabulary with maxx depth = 1
	$tax = taxonomy_get_tree(3, 0, 1);
	
	// make options for 1st-level categories (tid->name)
	$level1 = array();
	foreach ($tax as $value) {
		$level1[$value->tid] = $value->name;
	}

  // ajax
	if(isset($form_state['triggering_element']) && $form_state['triggering_element']['#type'] == 'select') {
		$input = $form_state['input'];
		if($input['1st_level'] && $input['1st_level'] !== 'all') {
			$parent = $input['1st_level'];

			$tax = taxonomy_get_tree(3, $parent);
			// make options for 1st-level categories (tid->name)
			$level2 = array();
			foreach ($tax as $value) {
				$level2[$value->tid] = $value->name;
			}
		}
	}
	else {
		// get current category if set
		$default = arg(1);
		if($default) {
			// get category parent
			$parent = taxonomy_get_parents($default);
			$parent = array_pop($parent);
			$parent = $parent->tid;

			$tax = taxonomy_get_tree(3, $parent);
			// make options for 1st-level categories (tid->name)
			$level2 = array();
			foreach ($tax as $value) {
				$level2[$value->tid] = $value->name;
			}
		}
	}

	$form['#id'] = 'tnd_portfolio_filters';

	$form['mark'] = array(
		'#markup' => '<h2>'. t('Sort portfolio by products') .'</h2>'
		);

	$form['1st_level'] = array(
		'#title' 			=> t('Category'),
		'#type' 			=> 'select',
		'#options' 			=> $level1,
		'#default_value' 	=> isset($parent) ? $parent : '',
		'#empty_option'		=> t('Choice category'),
		// '#empty_value'		=> ('all'),
		'#title_display'	=> 'invisible',
		'#ajax' 					=> array(
			'callback' 			=> '_tnd_tax_filters_ajax_callback_fields',
			'method' => 'replace',
			'wrapper' => 'subcategory-wrapper'
			)
		);

	$form['2nd_level'] = array(
		'#required' 		=> true,
		'#title' 			=> t('Subcategory'),
		'#type' 			=> 'select',
		'#disabled'			=> isset($level2) ? false : true,
		'#options' 			=> isset($level2) ? $level2 : array(),
		'#default_value' 	=> $default ? $default : '',
		// '#empty_option'		=> t('Choice subcategory'),
		'#title_display'	=> 'invisible',
		// '#empty_value'		=> ('all'),
		'#prefix'			=> '<div id="subcategory-wrapper">',
		'#suffix'			=> '</div>'
		);

	$form['submit'] = array(
		'#prefix' => '<div class="submit-wrapper">',
		'#suffix' => '</div>',
		'#type' => 'submit',
		'#value' => t('Find'),
		);

	return $form;
}

/*
 * implements hook_form_submit()
 */
function tnd_tax_filters_filters_form_submit($form, &$form_state) {
	if($form_state['values']['2nd_level'] && $form_state['values']['2nd_level'] !== 'all'){
		$form_state['no_redirect'] = false;
		$form_state['redirect'] = array('portfolio-by-product/'
			. $form_state['values']['2nd_level'] 
			);
	}
}

/*
 * Helper function - ajax update filters form
 */ 
function _tnd_tax_filters_ajax_callback_fields($form, $form_state) {
	return $form['2nd_level'];
}

function tnd_tax_filters_preprocess_page(&$variables){
	$path = request_uri();
	$term = menu_get_object('taxonomy_term', 2);
	if(isset($variables['node'])){
		$node = $variables['node'];
		if($node->type == 'protfolio') {
			if($place = field_get_items('node', $node, 'field_place')){
				$place = taxonomy_term_load($place[0]['tid']);
				$place = i18n_taxonomy_localize_terms($place);
				$place = $place->name;
			}
			else {
				$place = '';
			}
			$breadcrumbs = array();
			$breadcrumbs[] = l('main', '/');
			$breadcrumbs[] = l(t('portfolio'), '/portfolio');
			$breadcrumbs[] = $place;
			$breadcrumbs[] = $node->title;
			drupal_set_breadcrumb($breadcrumbs);
		}
	}
	elseif($term && $term->vocabulary_machine_name == 'categories') {
		// if (module_exists('i18n_taxonomy')) { //To not break your site if module is not installed
		$term = i18n_taxonomy_localize_terms($term);
		$parent = taxonomy_get_parents($term->tid);
		$breadcrumbs = array();
		$breadcrumbs[] = l('main', '/');
		$breadcrumbs[] = l(t('Catalog'), '/catalog');
		if($parent && count($parent)) {
			$parent = array_pop($parent);
			$parent = i18n_taxonomy_localize_terms($parent);
			$breadcrumbs[] = l($parent->name, "taxonomy/term/$parent->tid");
		}
		$breadcrumbs[] = $term->name;
		drupal_set_breadcrumb($breadcrumbs);
	}
}

function tnd_tax_filters_preprocess_search_result(&$variables){
	$node = $variables['result']['node'];
	$sku = field_get_items ('node' , $node , 'field_sku');
	$sku = field_view_value ('node' , $node , 'field_sku' , $sku[0]);
	$image = field_get_items ('node' , $node , 'field_gallery');
	$image = field_view_value ('node' , $node , 'field_gallery' , $image[0], array(
		'type' => 'image',
		'settings' => array(
		    'image_style' => 'catalog_thumbnail', //place your image style here
		    'image_link' => 'content',
		    ),
		)
	);
	$variables['sku'] = render($sku);
	$variables['image'] = render($image);
}